name: üê≥ Docker CI/CD - Auto Build & Test for SoniTranslate

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ –ö—ç—à Docker —Å–ª–æ—ë–≤
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4Ô∏è‚É£ –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞
      - name: Build Docker image
        id: build
        run: |
          echo "üöß Building Docker image..."
          docker build -t ghcr.io/${{ github.repository_owner }}/sonitranslate:latest . || {
            echo "‚ùå Docker build failed. Stopping workflow.";
            exit 1;
          }

      # 5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω
      - name: Verify image exists
        if: steps.build.outcome == 'success'
        run: |
          if ! docker image inspect ghcr.io/${{ github.repository_owner }}/sonitranslate:latest >/dev/null 2>&1; then
            echo "‚ùå Docker image not found after build!"
            exit 1
          fi
          echo "‚úÖ Docker image built successfully!"

      # 6Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      - name: Run container
        if: steps.build.outcome == 'success'
        run: |
          echo "üöÄ Running test container..."
          docker run -d -p 7860:7860 --name sonitranslate ghcr.io/${{ github.repository_owner }}/sonitranslate:latest
          sleep 40
          docker ps -a

      # 7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API (endpoint /health)
      - name: Check API health
        if: steps.build.outcome == 'success'
        run: |
          echo "üß™ Checking API health..."
          if ! curl -fs http://localhost:7860/health; then
            echo "‚ùå API endpoint not responding!"
            docker logs sonitranslate
            exit 1
          fi
          echo "‚úÖ API is healthy!"

      # 8Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GHCR
      - name: Log in to GitHub Container Registry
        if: steps.build.outcome == 'success'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 9Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ –≤ GHCR
      - name: Push Docker image
        if: steps.build.outcome == 'success'
        run: |
          echo "üì¶ Pushing image to GHCR..."
          docker push ghcr.io/${{ github.repository_owner }}/sonitranslate:latest
          echo "‚úÖ Image pushed successfully!"

      # üîü –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ —É–ø–∞–ª–æ
      - name: Show container logs on failure
        if: failure()
        run: |
          echo "üìú Showing container logs..."
          docker logs sonitranslate || true

      # 1Ô∏è‚É£1Ô∏è‚É£ SSH Debug (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
      - name: Debug via SSH (optional)
        if: failure()
        uses: mxschmitt/action-tmate@v3

      # 1Ô∏è‚É£2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      - name: Cleanup
        if: always()
        run: |
          echo "üßπ Cleaning up..."
          docker rm -f sonitranslate || true
          docker image prune -f
